/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.69
 * Generated at: 2016-12-15 09:51:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.student;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import beans.RequestOder;
import java.util.Stack;
import javax.servlet.http.HttpSession;
import beans.User;

public final class requestList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/jsp/student/include.jsp", Long.valueOf(1481603517171L));
    _jspx_dependants.put("/jsp/student/menu.jsp", Long.valueOf(1481603517191L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("    href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("    href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("    <script\r\n");
      out.write("        src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
	HttpSession session1 = ((HttpServletRequest)request).getSession();
User user = (User) session1.getAttribute("user"); 
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/PurchaseOrder/jsp/css/menu.css\" media=\"all\">\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"menu\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t<a href=\"/PurchaseOrder/jsp/student/studentMenu.jsp\">購入依頼システム</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("\t\t\t    <li><a href=\"/PurchaseOrder/jsp/PurchaseRequestServlet\">購入依頼一覧</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/PurchaseOrder/jsp/LogoutServlet\"><span class=\"glyphicon glyphicon-log-out\"></span>　ログアウト</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</head>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("    href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("    href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("    <script\r\n");
      out.write("        src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap CDN -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");

Stack requestOderList =  (Stack)request.getAttribute("requestList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<head>\r\n");
      out.write("<title>購入依頼リスト</title>\r\n");
      out.write("<style type =\"text/css\">\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\r\n");
      out.write("  font-size: 18px;\r\n");
      out.write("  background-color:#ECF0F1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<SCRIPT language=\"JavaScript\">\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<center>\r\n");
      out.write("<h1>購入依頼リスト </h1>\r\n");
      out.write("</center>\r\n");
      out.write("<br>\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</BODY>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Ubuntu\" />\r\n");
      out.write("<font face=\"游ゴシック\">\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("         <div class=\"brand\">\r\n");
      out.write("         </div>\r\n");
      out.write("            <ul class=\"list-group\">\r\n");
      out.write("            \r\n");
      out.write(" <table class=\"table table-striped table-bordered table-hover table-condensed\">\r\n");
      out.write("        <thead>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>日付</th>\r\n");
      out.write("          <th>依頼者</th>\r\n");
      out.write("          <th>依頼書籍</th>\r\n");
      out.write("          <th>購入物品の種類</th>\r\n");
      out.write("          <th>コメント</th>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("          ");
 while(requestOderList.isEmpty()==false){ 
      out.write("\r\n");
      out.write("     ");
 RequestOder requestOder= (RequestOder)requestOderList.pop();
      out.write("\r\n");
      out.write("      <TR>\r\n");
      out.write("   <TD><li class=\"list-group-item\">");
      out.print(requestOder.getDate() );
      out.write("</li></TD>\r\n");
      out.write("   <TD><li class=\"list-group-item\">");
      out.print(requestOder.getUser_name() );
      out.write("</li></TD>\r\n");
      out.write("   <TD><li class=\"list-group-item\">");
      out.print(requestOder.getRequest_name());
      out.write("</li></TD>\r\n");
      out.write("   <TD><li class=\"list-group-item\">");
      out.print(requestOder.getCategory()  );
      out.write("</li></TD>\r\n");
      out.write("   <TD><li class=\"list-group-item\">");
      out.print(requestOder.getComment() );
      out.write("</TD>\r\n");
      out.write("      </TR>    \r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("      </table>                \r\n");
      out.write("                 \r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("</div>\r\n");
      out.write("</font>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
